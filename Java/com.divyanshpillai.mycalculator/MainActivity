package com.divyanshpillai.mycalculator

import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.view.View
import android.widget.Button
import android.widget.Toast
import kotlinx.android.synthetic.main.activity_main.*

class MainActivity : AppCompatActivity() {

    var lastNumber = false
    var lastDot = false
    var lastOperator = false

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)
    }

    fun onClickDigit(view : View){
        tvOutput.append((view as Button).text)
        lastNumber = true
    }

    fun onClear(view : View){
        tvOutput.text = ""
        lastNumber = false
        lastDot = false
        lastOperator = false
    }

    fun onClickDecimal(view : View){
        if (lastNumber && !lastDot){
            tvOutput.append(".")
            lastDot = true
            lastNumber = false
        }
    }

    fun onEqual(view: View){
        if (lastNumber) {
            var value = tvOutput.text.toString()
            var prefix = ""

            // FOR SUBTRACTION
            try {
                if (value.startsWith("-")){
                    prefix = "-"
                    value = value.substring(1)
                }

                if (value.contains("-")) {
                    var splitvalue = value.split("-")  //99-9
                    var first = splitvalue[0]  //99
                    var second = splitvalue[1] //9

                    if (!prefix.isEmpty()){
                        first = prefix + first  //-99
                    }

                    tvOutput.text = removeExtraZero((first.toDouble() - second.toDouble()).toString())
                }
                else if (value.contains("+")) {
                    var splitvalue = value.split("+")  //99-9
                    var first = splitvalue[0]  //99
                    var second = splitvalue[1] //9

                    if (!prefix.isEmpty()){
                        first = prefix + first  //-99
                    }

                    tvOutput.text = removeExtraZero((first.toDouble() + second.toDouble()).toString())
                }
                else if (value.contains("*")) {
                    var splitvalue = value.split("*")  //99-9
                    var first = splitvalue[0]  //99
                    var second = splitvalue[1] //9

                    if (!prefix.isEmpty()){
                        first = prefix + first  //-99
                    }

                    tvOutput.text = removeExtraZero((first.toDouble() * second.toDouble()).toString())
                }
                else if (value.contains("/")) {
                    var splitvalue = value.split("/")  //99-9
                    var first = splitvalue[0]  //99
                    var second = splitvalue[1] //9

                    if (!prefix.isEmpty()){
                        first = prefix + first  //-99
                    }

                    tvOutput.text = removeExtraZero((first.toDouble() / second.toDouble()).toString())
                }

            } catch (e: ArithmeticException) {
                e.printStackTrace()
            }
        }
    }

//    fun onClickOperator(view : View){
//        if (lastNumber && !lastOperator){
//            tvOutput.append((view as Button).text)
//            lastNumber = false
//            lastOperator = true
//        }
//
//    } 22.0
    //  0123

    fun removeExtraZero(value : String) : String{
        var res = value
        if (value.contains(".0")){
            res = value.substring(0, value.length-2)
        }
        return res
    }

    fun onClickOperator(view : View){
        if(lastNumber && !isOperator(tvOutput.text.toString())){
            tvOutput.append((view as Button).text)
            lastNumber = false
            lastDot = false
        }
    }

    fun isOperator(value : String) : Boolean{
        return if (value.startsWith("-")){
            false
        }
        else{
            value.contains("/") || value.contains("*") ||
                    value.contains("+") || value.contains("-")
        }
    }
}
